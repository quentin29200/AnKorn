<?php

namespace PA\AnnonceBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * AnnonceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AnnonceRepository extends EntityRepository
{
	public function recupannoncesoffre()
	{
		$qb = $this->createQueryBuilder('a');
 		$qb
   			->where('a.an_dateSupression IS NULL')
        ->andWhere('a.an_publie = true')
        ->andWhere("a.an_type = 'offre'")
    		->orderBy('a.an_datePublication', 'DESC')
  		;

  		return $qb
   			->getQuery()
    		->getResult()
  		;
	}
  public function recupannoncesdemande()
  {
    $qb = $this->createQueryBuilder('a');
    $qb
        ->where('a.an_dateSupression IS NULL')
        ->andWhere('a.an_publie = true')
        ->andWhere("a.an_type = 'demande'")
        ->orderBy('a.an_datePublication', 'DESC')
      ;

      return $qb
        ->getQuery()
        ->getResult()
      ;
  }

  public function recupmesannonces($id)
  {
    $qb = $this->createQueryBuilder('a');
    $qb
        ->where('a.an_dateSupression IS NULL')
        ->andWhere('a.an_user = :user')
        ->setParameter('user', $id)
        ->orderBy('a.an_datePublication', 'DESC')
      ;

      return $qb
        ->getQuery()
        ->getResult()
      ;
  }

  public function recupannonces()
  {
    $qb = $this->createQueryBuilder('a');
    $qb
        ->where('a.an_dateSupression IS NULL')
        ->andWhere('a.an_publie = true')
        ->orderBy('a.an_datePublication', 'DESC')
      ;

      return $qb
        ->getQuery()
        ->getResult()
      ;
  }

  public function searchannonces($page, $nom, $sect, $type, $cat)
  {
    $qbnom = '';
    $qbsect = '';
    $qbtype = '';
    $qbcat = '';

    if (!is_null($nom)) {
           $qbnom = "$qb->expr()->like('u.username', %".$nom."%)"; 
    }

    if (!empty($sect)) {
            foreach ($sect as $secteur) {
                  $qbsect .= ' OR a.an_secteur = ' .$secteur;
            }
    }

    if (!is_null($type)) {
           $qbtype = 'a.an_type = ' .$type; 
    }
    if (!is_null($cat)) {
           $qbcat = 'a.an_categorie = ' .$categorie;
    }

    $qb = $this->createQueryBuilder('a');
    $qb
        ->where('a.an_dateSupression IS NULL')
        ->andWhere('a.an_publie = true')
        ->andWhere($qbnom)
        ->andWhere($qbsect) 
        ->andWhere($qbtype) 
        ->andWhere($qbcat)
        ->orderBy('a.an_datePublication', 'DESC')
      ;

      $qb->setFirstResult(($page-1) * 21)
            ->setMaxResults(21);
 
        return new Paginator($q);
      ;
  }
}
