<?php

namespace PA\UserBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
{
	public function recupadmins()
	{
		$qb = $this->createQueryBuilder('u');
 		$qb
   			->where('u.roles = :userrole ')
        ->setParameter('userrole', array("ROLE_ADMIN"))
    		->orderBy('u.username', 'ASC')
  		;

  		return $qb
   			->getQuery()
    		->getResult()
  		;
	}


  /**
     * Compte le nombre de lignes 
     * @param array $options
     * @return integer
     */
  /*
  public function countann(array $options = null) {
        $qb = $this->createQueryBuilder('a');
        $qb->select('count(a)');
        if ($options != null) {
            foreach ($options as $option => $valeur) {
                if (!empty($valeur)) {
                  if ($option == "an_titre") {
                    $qb->andWhere("a.". $option . " LIKE '%" . $valeur . "%'");
                  } else if ($option == "an_secteur") {
                      foreach ($valeur as $secteur) {
                         $qb->andWhere("a.". $option . ' = ' . $secteur);
                      }
                  } else if ($option == "an_type") {
                    $qb->andWhere("a.". $option . " = '" . $valeur . "'"); 
                  } else {
                    $qb->andWhere("a.". $option . ' = ' . $valeur );
                  }
                }
            }
        }
        return $qb->getQuery()->getSingleResult();
  }

  public function pagination($maxResults, $page = 1, $sort = null, $order = null,array $options = null) {
        $qb = $this->createQueryBuilder('a');
        if ($options != null) {
            foreach ($options as $option => $valeur) {
                if (!empty($valeur)) {
                  if ($option == "an_titre") {
                    $qb->andWhere("a.". $option . " LIKE '%" . $valeur . "%'");
                  } else if ($option == "an_secteur") {
                      foreach ($valeur as $secteur) {
                         $qb->andWhere("a.". $option . ' = ' . $secteur);
                      }
                  } else if ($option == "an_type") {
                    $qb->andWhere("a.". $option . " = '" . $valeur . "'"); 
                  } else {
                    $qb->andWhere("a.". $option . ' = ' . $valeur );
                  }
                }
            }
        }
        if ($sort != null) $qb->orderBy("a.". $sort, $order);
        $query = $qb->getQuery();
        $query->setFirstResult(($page - 1) * $maxResults)
                ->setMaxResults($maxResults);
        return $query->getResult();
  }
*/
}
